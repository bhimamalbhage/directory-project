{"version":3,"sources":["Directory.js","App.js","reportWebVitals.js","index.js"],"names":["Directory","props","togglePopup","setState","showPopup","state","changeName","e","name","target","value","addFolder","newfolder","type","path","childrens","directory","console","log","addFolderToParent","parent","child","currentDir","className","onClick","this","bind","onChange","map","i","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PACqBA,E,kDACjB,WAAYC,GACX,IAAD,8BACI,cAAMA,IAkBVC,YAAc,WACV,EAAKC,SAAS,CACVC,WAAa,EAAKC,MAAMD,aArBhC,EAyBAE,WAAa,SAACC,GACV,EAAKJ,SAAS,CACVK,KAAMD,EAAEE,OAAOC,SA3BvB,EA+BAC,UAAY,WAaR,IAAMC,EAAY,CAAEC,KAAM,SAC1BL,KAAM,EAAKH,MAAMG,KACjBM,KAAK,YAAD,OAAc,EAAKT,MAAMG,MAC7BO,UAAW,IAEX,EAAKZ,SAAS,CACVa,UAAU,2BAAK,EAAKX,MAAMW,WAAjB,IAA2BD,UAAU,GAAD,mBAAK,EAAKV,MAAMW,UAAUD,WAA1B,CAAoCH,QACnF,kBAAMK,QAAQC,IAAI,EAAKb,MAAMW,UAAUD,eAnD7C,EAuDAI,kBAAoB,SAACC,EAAOC,GACxB,EAAKlB,SAAS,CACVa,UAAS,eAAO,EAAKX,MAAMW,cAvD/B,EAAKX,MAAQ,CACTW,UAAW,CACPH,KAAM,SACNL,KAAM,WACNM,KAAM,WACNC,UAAW,CAAC,CACRF,KAAM,SACVL,KAAM,YACNM,KAAM,oBACNC,UAAW,MAGfO,WAAa,GACbd,KAAM,GACNJ,WAAW,GAhBnB,E,qDA8DU,IAAD,OACL,OACI,sBAAKmB,UAAU,YAAf,UACI,sBAAKC,QAASC,KAAKvB,YAAYwB,KAAKD,MAApC,UACI,sBAAMF,UAAU,MAAhB,iBAAgC,yCAEpC,qBAAKA,UAAU,kBAAf,SACCE,KAAKpB,MAAMD,WAAa,sBAAKmB,UAAU,WAAf,UACrB,uBAAOI,SAAU,SAACpB,GAAD,OAAO,EAAKD,WAAWC,IAAIG,MAAOe,KAAKpB,MAAMG,OAC9D,wBAAQgB,QAAS,kBAAI,EAAKb,aAA1B,yBAIJ,sBAAKY,UAAU,mBAAf,UACA,kDACI,qBAAIA,UAAU,aAAd,UACA,6BAAKE,KAAKpB,MAAMW,UAAUR,OACzBiB,KAAKpB,MAAMW,UAAUD,UAAUa,KAAI,SAACP,EAAMQ,GAC3C,OAAO,6BAAaR,EAAMb,MAAVqB,mB,GAlFGC,aCSxBC,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCOSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6779cc29.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nexport default class Directory extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            directory: {\r\n                type: \"folder\",\r\n                name: \"My Drive\",\r\n                path: \"/mydrive\",\r\n                childrens: [{\r\n                    type: \"folder\",\r\n                name: \"My Folder\",\r\n                path: \"/mydrive/myfolder\",\r\n                childrens: []\r\n                }] \r\n            },\r\n            currentDir : [],\r\n            name: \"\",\r\n            showPopup: false \r\n        }\r\n    }\r\n    togglePopup = () =>{\r\n        this.setState({\r\n            showPopup : !this.state.showPopup\r\n        })\r\n    }\r\n\r\n    changeName = (e) =>{\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    addFolder = () =>{\r\n        // const folderName = this.state.name;\r\n        // if(folderName.includes(\"/\"))\r\n        // {\r\n        //     var index = folderName.indexOf(\"/\");\r\n        //     var parent = folderName.slice(0,index);\r\n        //     var child = folderName.slice(index+1,folderName.length);\r\n        //     console.log(\"Parent is: \"+parent);\r\n        //     console.log(\"Child is: \"+child);\r\n        //     const x = this.addFolderToParent(parent,child);\r\n        //     console.log(x);\r\n        // }\r\n\r\n        const newfolder = { type: \"folder\",\r\n        name: this.state.name,\r\n        path: `/mydrive/${this.state.name}`,\r\n        childrens: []\r\n    };\r\n        this.setState({\r\n            directory: {...this.state.directory,childrens:[...this.state.directory.childrens,newfolder]}\r\n        },() => console.log(this.state.directory.childrens));\r\n   \r\n    }\r\n\r\n    addFolderToParent = (parent,child) =>{\r\n        this.setState({\r\n            directory : {...this.state.directory,}\r\n        })\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"directory\">\r\n                <div onClick={this.togglePopup.bind(this)}>\r\n                    <span className=\"new\">New</span><span> +</span>\r\n                </div>\r\n                <div className=\"directory-input\">\r\n                {this.state.showPopup && <div className=\"inputDiv\">\r\n                    <input onChange={(e) => this.changeName(e)} value={this.state.name} />\r\n                    <button onClick={()=>this.addFolder()}>Create</button>\r\n                    </div>\r\n                    }\r\n                </div>\r\n                <div className=\"directory-bottom\">\r\n                <h2>Navigate Folders</h2>\r\n                    <ul className=\"breadcrumb\">\r\n                    <li>{this.state.directory.name}</li>\r\n                    {this.state.directory.childrens.map((child,i)=>{\r\n                    return <li key={i}>{child.name}</li>\r\n                    })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\nimport Directory from './Directory'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Directory />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}